% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_ngram_clusters.R
\name{get_ngram_clusters}
\alias{get_ngram_clusters}
\title{Get ngram clusters}
\usage{
get_ngram_clusters(one_gram_keys, n_gram_keys,
  edit_threshold = edit_threshold, edit_dist_weights = edit_dist_weights)
}
\arguments{
\item{one_gram_keys}{Character vector of ngram fingerprints for which n
equals one.}

\item{n_gram_keys}{Character vector of ngram fingerprints for which n is
a user defined numeric value passed as a parameter to function
\code{\link{n_gram_merge}}.}

\item{edit_threshold}{Numeric value indicating the threshold at which a
merge is performed, based on the sum of the edit values derived from
param \code{edit_dist_weights}. Default value is 1. If this parameter is
set to 0 or NA, then no approximate string matching will be done, and all
merging will be based on strings that have identical ngram fingerprints.}

\item{edit_dist_weights}{Numeric vector indicating the weights to assign to
the four edit operations (see details below), for the purpose of
approximate string matching. Default values are
c(d = 0.33, i = 0.33, s = 1, t = 0.5). This parameter gets passed along
to the function \code{\link[stringdist]{stringdistmatrix}}. Must be either
a numeric vector of length four, or NA.}
}
\value{
A list, each element of which is a cluster of similar values.
}
\description{
Create clusters of similar values based on the ngram fingerprints of those
values. For more info on ngram fingerprinting, see
\url{https://github.com/OpenRefine/OpenRefine/wiki/Clustering-In-Depth}.
}
\examples{
\dontrun{
vect <- c("Acme Pizza, Inc.",
          "ACME PIZZA COMPANY",
          "Bob's Pizza",
          "bobs pizza, llc.",
          "Bobby's Pizza")
univect <- unique(vect)
one_gram_keys <- get_fingerprint_ngram(univect,
                                       numgram = 1,
                                       bus_suffix = TRUE)
n_gram_keys <- get_fingerprint_ngram(univect,
                                     numgram = 2,
                                     bus_suffix = TRUE)
get_ngram_clusters(one_gram_keys,
                   n_gram_keys,
                   edit_threshold = 1,
                   edit_dist_weights = c(d = 0.33, i = 0.33, s = 1, t = 0.5))
[[1]]
[[1]][[1]]
[1] "accmepizmepizazz" "accmepizmepizazz"


[[2]]
[[2]][[1]]
[1] "bobsizobpispzazz" "bobsizobpispzazz"
# In this exmaple, "Bobby's Pizza" is ignored because it does not have a
# match.
}
}
